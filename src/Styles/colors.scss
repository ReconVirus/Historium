// Define color map and available colors
$colors: (
    "red": #ff0000,
    "coral": #FF7F50,
    "orange": #ffa500,
    "amber": #FFBF00,
    "gold": #FFD700,
    "yellow": #FFD700,//#ffff00,
    "khaki": #F0E68C,
    "chartreuse": #7FFF00,
    "lime": #00ff00,
    "green": #008000,
    "teal": #008080,
    "turquoise": #40E0D0,
    "darkcyan": #008B8B,
    "cadetblue": #5F9EA0,
    "aqua": #00ffff,
    "azure": #007FFF,
    "blue":  #007FFF,//#0000ff,
    "navy": #000080,
    "purple": #8A2BE2,//#800080,
    "violet": #EE82EE,
    "blueviolet": #8A2BE2,
    "lavender": #E6E6FA,
    "fuchsia": #ff00ff,
    "magenta": #FF00FF,
    "orchid": #DA70D6,
    "pink": #DA70D6,//#ffc0cb,
    "salmon": #FA8072,
    "maroon": #800000,
    "brown": #A52A2A,
    "chocolate": #D2691E,
    "tan": #D2B48C,
    "white": #ffffff, 
    "gray": #808080,
    "black": #000000,
);

$available-colors: blue, green, gray, orange, pink, purple, red, yellow, white;

// Define utility functions
@function str-to-color($string) {
    @return map-get($colors, $string);
}

@function hover-selected-colors($color) {
    $background-color: mix(white, $color, 80%);
    $border-color: darken($color, 10%);
    @return ($background-color, $border-color);
}

// Define mixins
@mixin add-color($color, $starting-element) {
    $color-value: if(type-of($color) == 'string', str-to-color($color), $color);
    @at-root #{$starting-element}.#{$color} {
        filter: none;
        background-color: mix(white, $color-value, 20%);
        border-color: $color-value;
    }
}

@mixin add-hover-selected-colors($color, $starting-element) {
    $color-value: if(type-of($color) == 'string', str-to-color($color), $color);
    $colors: hover-selected-colors($color-value);
    $background-color: nth($colors, 1);
    $border-color: nth($colors, 2);
    
    @at-root #{$starting-element}.#{$color}:hover,
             #{$starting-element}.vis-selected.#{$color} {
        background-color: $background-color;
        border-color: $border-color;
    }
}

// Define mixins
@mixin add-color-border($color, $starting-element) {
    $color-value: if(type-of($color) == 'string', str-to-color($color), $color);
    @at-root #{$starting-element}.#{$color} {
        filter: none;
        &::after {
            border-color: $color-value;
        }
    }
}